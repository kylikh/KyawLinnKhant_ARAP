model = models.Sequential()

model.add(layers.Conv2D(64,(3,3),activation='relu', input_shape=(32,32,3)))
model.add(layers.BatchNormalization())
model.add(layers.MaxPooling2D((2,2)))

model.add(layers.Conv2D(128,(3,3),activation='relu'))
model.add(layers.BatchNormalization())
model.add(layers.MaxPooling2D((2,2)))

model.add(layers.Conv2D(256,(3,3),activation='relu'))
model.add(layers.BatchNormalization())
model.add(layers.MaxPooling2D((2,2)))
model.add(layers.Dropout(0.3))

model.add(layers.GlobalAveragePooling2D())
model.add(layers.Dense(256, activation='relu'))
model.add(layers.Dropout(0.5))
model.add(layers.Dense(10))

model.summary()

# Import plot_model for visualizing the model architecture
from tensorflow.keras.utils import plot_model
from IPython.display import Image

# Save and visualize the model architecture
plot_model(model, to_file="model_architecture.png", show_shapes=True)
Image(filename="model_architecture.png")
